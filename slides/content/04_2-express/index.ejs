<section>
  <h1>express.js</h1>
  <h2>Лекція 4.2</h2>
</section>

<section>
  <h2>http</h2>

  <section>
    <pre><code class="hljs" data-trim contenteditable>
const http = require('http');

http.createServer(function(req, res) {
  res.write('Hello World!');
  res.end();
}).listen(8080);
    </code></pre>
  </section>
</section>

<section>
  <h2>Hello World</h2>

  <section>
    <h3>Інсталяція</h3>

    <pre><code class="hljs" data-trim contenteditable>
npm install --save express
    </code></pre>
  </section>

  <section>
    <h3>Створення аплікації</h3>

    <pre><code class="hljs" data-trim contenteditable>
const express = require('express');
const app = express();
    </code></pre>
  </section>

  <section>
    <h3>Обробка запиту</h3>

    <pre><code class="hljs" data-trim contenteditable>
app.get('*', function (req, res) {
  res.send('Hello World!');
});
    </code></pre>
  </section>

  <section>
    <h3>Старт сервера</h3>

    <pre><code class="hljs" data-trim contenteditable>
app.listen(3000, function() {
  console.log('App started on http://localhost:3000');
});
    </code></pre>
  </section>
</section>

<section>
  <h2>Запит (req)</h2>

  <section>
    <h3>params</h3>

    <pre><code class="hljs" data-trim contenteditable>
app.get('/tasks/:id', function (req, res) {
  // req.params.id === '1'
});
    </code></pre>

    <pre><code class="hljs" data-trim contenteditable>
http://localhost:3000/tasks/1
// або
GET /tasks/1
    </code></pre>
  </section>

  <section>
    <h3>query</h3>

    <pre><code class="hljs" data-trim contenteditable>
app.get('/tasks', function (req, res) {
  // req.query.q === 'kittens'
  // req.query.order === 'desc'
});
    </code></pre>

    <pre><code class="hljs" data-trim contenteditable>
GET /tasks?q=kittens&amp;order=desc
    </code></pre>
  </section>

  <section>
    <h3>req.param</h3>

    <p>Шукає по черзі в:</p>
    <ul>
      <li><i>req.params</i></li>
      <li><i>req.body</i> (вимагає <i>body-parser</i>)</li>
      <li><i>req.query</i></li>
    </ul>

    <pre><code class="hljs" data-trim contenteditable>
req.param('name')
    </code></pre>
  </section>

  <section>
    <h3>Заголовки</h3>

    <pre><code class="hljs" data-trim contenteditable>
req.get('content-type') //=&gt; text/plain
    </code></pre>
  </section>

  <section>
    <h3>Cookies</h3>

    <pre><code class="hljs" data-trim contenteditable>
req.cookies.name //=&gt; Vasya
    </code></pre>
  </section>

  <section>
    <h3>Інша інформація про запит</h3>

    <pre><code class="hljs" data-trim contenteditable>
req.ip //=&gt; 127.0.01
    </code></pre>
  </section>
</section>

<section>
  <h2>Шляхи (Routes)</h2>

  <section>
    <h3>Корінь</h3>

    <pre><code class="hljs" data-trim contenteditable>
app.get('/', function (req, res) {
  // ...
});
    </code></pre>
  </section>

  <section>
    <h3>Складені</h3>

    <pre><code class="hljs" data-trim contenteditable>
app.get('/tasks/search', function (req, res) {
  // ...
});
    </code></pre>
  </section>

  <section>
    <h3>Методи</h3>

    <pre><code class="hljs" data-trim contenteditable>
app.get('/tasks', function (req, res) {
  // ...
});

app.post('/tasks', function (req, res) {
  // ...
});
    </code></pre>
  </section>
</section>

<section>
  <h2>Запит (req)</h2>

  <section>
    <h3>Статичний контент</h3>

    <pre><code class="hljs" data-trim contenteditable>
app.get('/', function(req, res) {
  res.send('Hello World!');
});
    </code></pre>

    <pre><code class="hljs" data-trim contenteditable>
app.get('/', function(req, res) {
  res.send({ name: 'Petrov' });
});
    </code></pre>
  </section>

  <section>
    <h3>Файл</h3>

    <pre><code class="hljs" data-trim contenteditable>
app.get('/file/:name', function(req, res) {
  const fileName = req.params.name;
  res.sendFile(fileName, function(err) {
    console.log('Sent:', fileName);
  });
});
    </code></pre>
  </section>

  <section>
    <h3>Встановити статус</h3>

    <pre><code class="hljs" data-trim contenteditable>
app.get('/', function(req, res) {
  res.status(403);
});
    </code></pre>
  </section>

  <section>
    <h3>Відправити статус</h3>

    <pre><code class="hljs" data-trim contenteditable>
app.get('/', function(req, res) {
  res.sendStatus(403);
  // Еквівалент: res.status(403).send('Forbidden')
});
    </code></pre>
  </section>

  <section>
    <h3>Заголовки</h3>

    <pre><code class="hljs" data-trim contenteditable>
res.set('Content-Type', 'text/plain');

res.set({
  'Content-Type': 'text/plain',
  'Content-Length': '123',
  'ETag': '12345'
});
    </code></pre>
  </section>

  <section>
    <h3>Cookies</h3>

    <pre><code class="hljs" data-trim contenteditable>
res.cookie('name', 'Vasyl', {
  domain: '.example.com', path: '/admin'
});
    </code></pre>
  </section>
</section>

<section>
  <h2>Шаблонізатори (ejs)</h2>

  <section>
    <h3>Підключення</h3>

    <pre><code class="hljs" data-trim contenteditable>
npm install --save ejs
    </code></pre>

    <pre><code class="hljs" data-trim contenteditable>
app.set('view engine', 'ejs');
    </code></pre>

    <p>Визначення директорії</p>
    <pre><code class="hljs" data-trim contenteditable>
app.set('views', __dirname + '/views');
    </code></pre>
  </section>

  <section>
    <h3>Використання</h3>

    <pre><code class="hljs" data-trim contenteditable>
app.get('/', function(req, res) {
    res.render('pages/index', { user: 'Vasya' });
});
    </code></pre>

    <i>pages/index.ejs</i>
    <pre><code class="hljs" data-trim contenteditable>
&lt;h1&gt;Hello &lt;%= user %&gt;&lt;/h1&gt;
    </code></pre>
  </section>

  <section>
    <h3>Вбудований JavaScript</h3>

    <i>pages/index.ejs</i>
    <pre><code class="hljs" data-trim contenteditable>
&lt;% if (user) { %&gt;
  &lt;h1&gt;Hello &lt;%= user %&gt;&lt;/h1&gt;
&lt;% } else { %&gt;
  &lt;h1&gt;Hello Guest&lt;/h1&gt;
&lt;% } %&gt;
    </code></pre>
  </section>

  <section>
    <h3>Частини (Partials)</h3>

    <pre><code class="hljs" data-trim contenteditable>
&lt;% include ../partials/head %&gt;
&lt;h1&gt;Hello &lt;%= user %&gt;&lt;/h1&gt;
&lt;% include ../partials/foot %&gt;
    </code></pre>

    <i>partials/head.ejs</i>
    <pre><code class="hljs" data-trim contenteditable>
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Hello app&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    </code></pre>

    <i>partials/foot.ejs</i>
    <pre><code class="hljs" data-trim contenteditable>
  &lt;/body&gt;
&lt;/html&gt;
    </code></pre>
  </section>

  <section>
    <h3>pug</h3>

    <pre><code class="hljs" data-trim contenteditable>
doctype html
html(lang='en')
 head
   title Pug
 body
   h1 Pug Examples
   div.container
     p Cool Pug example!
    </code></pre>
  </section>
</section>

<section>
  <h2>Ресурси</h2>

  <section>
    <h3>Методи</h3>

    <p><b>CRUD</b> - Create Read Update Delete</p>
    <table>
      <thead>
        <tr>
          <td>Метод</td><td>Обробник</td>
        </tr>
      </thead>
      <tbody>
        <tr><td>GET</td><td>app.get</td></tr>
        <tr><td>POST</td><td>app.post</td></tr>
        <tr><td>PUT</td><td>app.put</td></tr>
        <tr><td>DELETE</td><td>app.del</td></tr>
      </tbody>
    </table>
  </section>

  <section>
    <table>
      <thead>
        <tr>
          <td>Дія</td><td>Метод</td><td>Шлях</td><td>Функція</td><td>Шаблон</td>
        </tr>
      </thead>
      <tbody>
        <tr><td>Список</td><td>GET</td><td>/tasks</td><td>index</td><td>index.ejs</td></tr>
        <tr><td>Форма створення</td><td>GET</td><td>/tasks/new</td><td>new</td><td>new.ejs</td></tr>
        <tr><td>Створення</td><td>POST</td><td>/tasks</td><td>create</td><td>-</td></tr>
        <tr><td>Перегляд</td><td>GET</td><td>/tasks/:id</td><td>show</td><td>show.ejs</td></tr>
        <tr><td>Форма редагування</td><td>GET</td><td>/tasks/:id/edit</td><td>edit</td><td>edit.ejs</td></tr>
        <tr><td>Збереження</td><td>PUT</td><td>/tasks/:id</td><td>update</td><td>-</td></tr>
        <tr><td>Видалення</td><td>DELETE</td><td>/tasks/:id</td><td>destroy</td><td>-</td></tr>
      </tbody>
    </table>
  </section>

  <section>
    <p>HTML форми підтримують тільки <i>GET</i> і <i>POST</i></p>
    <table>
      <thead>
        <tr>
          <td>Дія</td><td>Метод</td><td>Шлях</td>
        </tr>
      </thead>
      <tbody>
        <tr><td>Збереження</td><td>PUT</td><td>/tasks/:id</td></tr>
        <tr><td>Видалення</td><td>DELETE</td><td>/tasks/:id</td></tr>
        <tr colspan="5">Альтурнатива:</tr>
        <tr><td>Збереження</td><td>POST</td><td>/tasks/:id/update</td></tr>
        <tr><td>Видалення</td><td>GET/POST</td><td>/tasks/:id/delete</td></tr>
      </tbody>
    </table>
  </section>


  <section>
    <h3>Все можна виразити, як ресурси</h3>

    <ul>
      <li><b>Дія над задачею</b> - /tasks/:id/completion</li>
      <li><b>Дія над колекцією</b> - /tasks/completion</li>
      <li><b>Створення набору задач</b> - /task_bundle</li>
      <li><b>Підзадачі</b> - /tasks/:id/subtasks</li>
    </ul>
  </section>
</section>

<section>
  <h2>body-parser</h2>

  <section>
    <h3>Інсталяція</h3>

    <pre><code class="hljs" data-trim contenteditable>
npm install --save body-parser
    </code></pre>
  </section>

  <section>
    <h3>Використання</h3>

    <pre><code class="hljs" data-trim contenteditable>
const bodyParser = require('body-parser');

// Для форм (application/x-www-form-urlencoded)
app.use(bodyParser.urlencoded({ extended: false }));
    </code></pre>
  </section>

  <section>
    <h3>Форма</h3>

    <pre><code class="hljs" data-trim contenteditable>
&lt;form action="/tasks" method="post"&gt;
  &lt;input name="title" type="text" /&gt;
  &lt;input type="submit" /&gt;
&lt;/form&gt;
    </code></pre>

    <pre><code class="hljs" data-trim contenteditable>
app.post('/tasks', function (req, res) {
  // req.body.title
});
    </code></pre>
  </section>
</section>

<section>
  <h2>Статичні файли</h2>

  <section>
    <h3>Підключення директорії</h3>

    <pre><code class="hljs" data-trim contenteditable>
app.use(express.static('public'));
    </code></pre>

    <pre><code class="hljs" data-trim contenteditable>
http://localhost:3000/images/kitten.jpg
http://localhost:3000/css/style.css
http://localhost:3000/js/app.js
http://localhost:3000/images/bg.png
http://localhost:3000/index.html
    </code></pre>
  </section>

  <section>
    <h3>Абсолютний шлях</h3>

    <p>Більш надійний варіант. Програму можна запускати з будь якої директорії.</p>
    <pre><code class="hljs" data-trim contenteditable>
app.use(express.static(__dirname + '/public'));
    </code></pre>
  </section>

  <section>
    <h3>Точка монтування</h3>

    <pre><code class="hljs" data-trim contenteditable>
app.use('/assets', express.static('public'));
    </code></pre>

    <pre><code class="hljs" data-trim contenteditable>
http://localhost:3000/assets/images/kitten.jpg
http://localhost:3000/assets/css/style.css
http://localhost:3000/assets/js/app.js
http://localhost:3000/assets/images/bg.png
    </code></pre>
  </section>
</section>

<section>
  <h2>Middleware</h2>

  <section>
    <h3>Будь-який шлях</h3>

    <pre><code class="hljs" data-trim contenteditable>
const express = require('express');
const app = express();
    </code></pre>

    <pre><code class="hljs" data-trim contenteditable>
app.get('/admin*', function(req, res, next) {
  const dateString = new Date().toString();
  console.log(`REQUEST ${dateString}`);
  next();
});
    </code></pre>

    <pre><code class="hljs" data-trim contenteditable>
app.get('*', function(req, res, next) {
  res.send('Hello World!');
});

app.listen(3000);
    </code></pre>
  </section>

  <section>
    <h3>next можна не викликати</h3>

    <pre><code class="hljs" data-trim contenteditable>
const express = require('express');
const app = express();
    </code></pre>

    <pre><code class="hljs" data-trim contenteditable>
app.get('/admin*', function(req, res, next) {
  if (req.query.password === 'qwerty') {
    next();
  } else {
    res.status(500);
    res.send('You are not an admin');
  }
});
    </code></pre>

    <pre><code class="hljs" data-trim contenteditable>
app.get('*', function(req, res, next) {
  res.send('Hello World!');
});

app.listen(3000);
    </code></pre>
  </section>

  <section>
    <h3>Спеціальний синтаксис</h3>

    <pre><code class="hljs" data-trim contenteditable>
const express = require('express');
const app = express();
    </code></pre>

    <pre><code class="hljs" data-trim contenteditable>
const myLogger = function(req, res, next) {
  const dateString = new Date().toString();
  console.log(`REQUEST ${dateString}`);
  next();
};

app.use(myLogger);
    </code></pre>

    <pre><code class="hljs" data-trim contenteditable>
app.get('*', function(req, res, next) {
  res.send('Hello World!');
});

app.listen(3000);
    </code></pre>
  </section>

  <section>
    <h3>Аплікація це також middleware</h3>

    <pre><code class="hljs" data-trim contenteditable>
const express = require('express');
    </code></pre>

    <pre><code class="hljs" data-trim contenteditable>
const app = express(); // the main app
const admin = express(); // the sub app

// /admin
admin.get('/', function(req, res) {
  res.send('Admin Homepage');
});

app.use('/admin', admin); // mount the sub app
    </code></pre>

    <pre><code class="hljs" data-trim contenteditable>
app.listen(3000);
    </code></pre>
  </section>
</section>

<section>
  <h2>Питання?</h2>
</section>
